@model ProductivityApp.Models.ViewModels.TemplateFieldsViewModel

@{
    ViewData["Title"] = "Fields";
}

<h2>Fields</h2>

<h4>TemplateFieldsViewModel</h4>
<hr />
@{ var fieldCtr = -1;
var criteriaCtr= -1;}
<div class="row">
    <div class="col-md-4">
        <form asp-action="Fields">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <h4>Fields</h4>
            <div id="fields-container">
                @foreach (var field in Model.Fields)
                {
                    fieldCtr++;
                    <div class="form-group">
                        <label>Tag</label>
                        <input class="form-control" name="Fields[@fieldCtr].tag" value="@field.tag" />
                    </div>
                    <div class="form-group">
                        <label>Prompt</label>
                        <input class="form-control" name="Fields[@fieldCtr].prompt" value="@field.prompt" />
                    </div>
                    <div class="form-group">
                        <label>Kind</label>

                        <select class="form-control" name="Fields[@fieldCtr].Kind">
                            @foreach (Field.Kinds kind in Enum.GetValues(typeof(Field.Kinds)))
                            {
                                if (kind == field.Kind)
                                {
                                    <option selected>@kind.ToString()</option>
                                }
                                else
                                {
                                    <option>@kind.ToString()</option>
                                }
                            }
                            <option>String</option>foreach
                            <option>Number</option>
                            <option>Date</option>
                        </select>
                    </div>
                }
 
            
                <div id="add-field-button" value="Add new field" class="btn btn-primary">Add new field</div>
                </div>
            
            <div id="criteria-container">
                <div class="form-group">
                               <h4>Criteria</h4>
        
                @foreach (var criteria in Model.Criteria)
                {

                    criteriaCtr++;
                    <div class="form-group">
                        <label>Category</label>
                        <input class="form-control" name="Criteria[@criteriaCtr].Category" value="@criteria.Category" />
                    </div>
                    <div class="form-group">
                        <label>Prompt</label>
                        <input class="form-control" name="Criteria[@criteriaCtr].Prompt" value="@criteria.prompt" />
                    </div>
                    
                }
            </div>
            <div class="form-group">
                <div id="add-criteria-button" value="Add new criteria" class="btn btn-primary">Add new criteria</div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>


        </form>


        <div id="new-field-template" style="display:none;">
            <div class="form-group">
                <label>Tag</label>
                <input class="tag form-control" name="Fields[@fieldCtr].tag" />
            </div>
            <div class="form-group">
                <label>Prompt</label>
                <input class="prompt form-control" name="Fields[@fieldCtr].prompt" />
            </div>
            <div class="form-group">
                <label>Kind</label>

                <select class="kind form-control" name="Fields[@fieldCtr].Kind">
                    @foreach (Field.Kinds kind in Enum.GetValues(typeof(Field.Kinds)))
                    {
                        <option>@kind.ToString()</option>
                    }
                    <option>String</option>foreach
                    <option>Number</option>
                    <option>Date</option>
                </select>
                <hr />
            </div>
             <div class="form-group">
                <div id="remove-field-button" value="delete field" class="btn btn-danger" onClick="DeleteField(this)">Delete field</div>
            
            </div>

        </div>


        <div id="new-criteria-template" style="display:none;">
            <div class="form-group">
                <label>Category</label>
                <input class="tag form-control" name="Criteria[@criteriaCtr].category" />
            </div>
            <div class="form-group">
                <label>Prompt</label>
                <input class="prompt form-control" name="Criteria[@criteriaCtr].prompt" />
            </div>
            <div class="form-group">
                <label>Answers</label>
       
                        <option>Yes</option>
                        <option>No</option>
                        
                </div>
                <div class="form-group">
                <div id="remove-criteria-button" value="delete criteria" class="btn btn-danger" onClick="DeleteField(this)">Delete criteria</div>
            
            </div>
                <hr />
            </div>
             

        </div>

    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>


            function DeleteField(field)
            {
               $(field).parent().parent().remove();
            }


            $(function () {
                var fieldCtr = @fieldCtr
                    console.log(fieldCtr);

                $("#add-field-button").click(() => {
                    console.log("I dun clicked it");
                    fieldCtr = fieldCtr + 1;
                    //todo: set counter for fields
                    fieldName = `Fields[${fieldCtr}]`
                    clone = $("#new-field-template").clone(false);
                    $(clone).find(".tag").attr("name", fieldName + ".tag");
                    $(clone).find(".kind").attr("name", fieldName + ".kind");
                    $(clone).find(".prompt").attr("name", fieldName + ".prompt");                    
                    $(clone).show().appendTo("#fields-container");
                })
            }); 

            $(function () {
                var criteriaCtr = @criteriaCtr
                    console.log(criteriaCtr);
                $("#add-criteria-button").click(() => {
                    console.log("I dun clicked it");
                    criteriaCtr = criteriaCtr + 1;
                    //todo: set counter for fields
                    criteriaName = `Criteria[${criteriaCtr}]`
                    clone = $("#new-criteria-template").clone(false);
                    $(clone).find(".category").attr("name", criteriaName + ".tag");
                    $(clone).find(".prompt").attr("name", criteriaName + ".kind");
                    $(clone).find(".answer").attr("name", criteriaName + ".prompt");                    
                    $(clone).show().appendTo("#criteria-container"); 
                     })
            });
        
        </script>

    }
